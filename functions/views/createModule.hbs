<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <link type="text/css" rel="stylesheet" href="https://static.olympusorg.com/css/main.css">
    <link type="text/css" rel="stylesheet" href="https://static.olympusorg.com/css/TopBar.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>
    <style>
      .content {
        padding: 10px;
      }
      
      label {
        font-weight: 600;
      }
    </style>
  </head>
  <body>
    <div id="TopBar"></div>
    <div class="content">
      <div class="container">
        <div class="row">
          <div class="col-12">
            <h2>Create Module for {{name}}</h2>
          </div>
        </div>
        <div class="row mt-4">
          <div class="col-md-8">
            <form action="javascript:createModule();">
              <div class="mb-2">
                 <span class="lead">Create an Module</span>
              </div>
              <div class="form-group">
                <label for="moduleName">Module name</label>
                <input type="text" class="form-control" id="moduleName" aria-describedby="moduleNameHelp" required>
                <div class="invalid-feedback">
                  Module name is not available or must be at least 4 characters long.
                </div>
              </div>
              <div class="form-group mb-4">
                <label for="moduleDescription">Module description</label>
                <input type="text" class="form-control" id="moduleDescription" describedby="moduleDescriptionHelp" required>
                <small id="moduleDescriptionHelp" class="form-text text-muted">Help others identify what this module represents.</small>
              </div>              
              <small class="form-text text-muted mb-3">By clicking on "Create module" below, you are agreeing to the Terms of Service and the Privacy Policy.</small>
              <button type="submit" class="btn btn-secondary">Create Module</button>
            </form>
          </div>
          <div class="col-md-4">
            <small class="form-text text-muted">Modules are used for getting data in intents.</small>
          </div>
        </div>
      </div>
    </div>
    <script>
      $(() => {
        $("#TopBar").load("https://static.olympusorg.com/TopBar.htm");     
      })
    </script>
    
    <script src="/__/firebase/5.7.0/firebase-app.js"></script>

    <!-- Add additional services that you want to use -->
    <script src="/__/firebase/5.7.0/firebase-auth.js"></script>
    <script src="/__/firebase/5.7.0/firebase-database.js"></script>
    <script src="/__/firebase/5.7.0/firebase-firestore.js"></script>
    <script src="/__/firebase/5.7.0/firebase-messaging.js"></script>
    <script src="/__/firebase/5.7.0/firebase-functions.js"></script>

    <script src="/__/firebase/init.js"></script>
     <script>
       const orgID = "{{id}}";
      const db = firebase.firestore();
      db.settings({
        timestampsInSnapshots: true
      });
       
      $(() => {
        $("#moduleName").on('input', function () {
          const name = $(this).val();
          $(".insertModuleName").html(name);
          if (name.length >= 4) {
            var docRef = db.collection("modules").doc(orgID+ "." + name);
            docRef.get().then((doc) => {
              if (!doc.exists) {
                $("#moduleName").removeClass("is-invalid");
                $("#moduleName").addClass("is-valid");
              } else {
                $("#moduleName").removeClass("is-valid");
                $("#moduleName").addClass("is-invalid");
              }
            });
          } else {
            $("#moduleName").removeClass("is-valid");
            $("#moduleName").addClass("is-invalid");
          }
        });     
      });
      
      const createModule = () => {
        const name = $('#moduleName').val();
        const description = $('#moduleDescription').val();
        const id = orgID +"." + name;
        
        var moduleRef = db.collection("modules").doc(id);
        moduleRef.set({
          id: id,
          organisationID: orgID,
          name: name,
          description: description
        }).then(() => {
          window.location.replace(`/o/{{name}}/modules/${name}`);
        });
      }
    </script>
  </body>
</html>
